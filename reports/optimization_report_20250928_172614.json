{
  "timestamp": "20250928_172614",
  "analysis": {
    "file_structure": {
      "total_files": 89,
      "total_size_mb": 922.3355302810669,
      "file_types": {
        "": {
          "count": 1,
          "size": 795
        },
        ".py": {
          "count": 29,
          "size": 621546
        },
        ".md": {
          "count": 3,
          "size": 26250
        },
        ".txt": {
          "count": 1,
          "size": 1551
        },
        ".ipynb": {
          "count": 5,
          "size": 884432
        },
        ".csv": {
          "count": 16,
          "size": 28112425
        },
        ".pkl": {
          "count": 15,
          "size": 83745250
        },
        ".log": {
          "count": 1,
          "size": 0
        },
        ".joblib": {
          "count": 5,
          "size": 832640536
        },
        ".json": {
          "count": 1,
          "size": 1603
        },
        ".h5": {
          "count": 2,
          "size": 4443056
        },
        ".keras": {
          "count": 3,
          "size": 14719514
        },
        ".png": {
          "count": 7,
          "size": 1941943
        }
      }
    },
    "code_quality": {
      "total_python_files": 29,
      "total_lines": 15511,
      "duplicated_imports": [],
      "large_files": [
        {
          "file": "advanced_model_tuning.py",
          "lines": 586
        },
        {
          "file": "app.py",
          "lines": 872
        },
        {
          "file": "app_temp.py",
          "lines": 872
        },
        {
          "file": "neural_architecture_search.py",
          "lines": 610
        },
        {
          "file": "optimized_model_trainer.py",
          "lines": 579
        },
        {
          "file": "streamlit_dashboard.py",
          "lines": 749
        },
        {
          "file": "ultimate_ensemble.py",
          "lines": 541
        },
        {
          "file": "src\\advanced_automl_system.py",
          "lines": 906
        },
        {
          "file": "src\\advanced_gpu_trainer.py",
          "lines": 556
        },
        {
          "file": "src\\advanced_neural_trainer.py",
          "lines": 866
        },
        {
          "file": "src\\enhanced_predict.py",
          "lines": 664
        },
        {
          "file": "src\\explainability.py",
          "lines": 548
        },
        {
          "file": "src\\gpu_enhanced_trainer.py",
          "lines": 1019
        },
        {
          "file": "src\\preprocessing.py",
          "lines": 668
        },
        {
          "file": "src\\utils.py",
          "lines": 569
        }
      ],
      "optimization_opportunities": []
    },
    "memory_usage": {
      "current_memory_mb": 372.96484375,
      "virtual_memory_mb": 1293.66796875,
      "cpu_percent": 0.0,
      "system_memory_available_gb": 6.640415191650391
    },
    "data_efficiency": {
      "data_files": [
        {
          "file": "data\\processed\\features.csv",
          "size_mb": 0.9203338623046875,
          "type": ".csv"
        },
        {
          "file": "data\\processed\\feature_names.pkl",
          "size_mb": 0.000362396240234375,
          "type": ".pkl"
        },
        {
          "file": "data\\processed\\imputer.pkl",
          "size_mb": 0.0012044906616210938,
          "type": ".pkl"
        },
        {
          "file": "data\\processed\\labels.csv",
          "size_mb": 0.15312671661376953,
          "type": ".csv"
        },
        {
          "file": "data\\processed\\label_encoder.pkl",
          "size_mb": 0.0004901885986328125,
          "type": ".pkl"
        },
        {
          "file": "data\\processed\\processed_data.csv",
          "size_mb": 0.4416971206665039,
          "type": ".csv"
        },
        {
          "file": "data\\processed\\scaler.pkl",
          "size_mb": 0.0016317367553710938,
          "type": ".pkl"
        },
        {
          "file": "data\\processed\\sources.csv",
          "size_mb": 0.07989120483398438,
          "type": ".csv"
        },
        {
          "file": "data\\processed\\target_mapping.pkl",
          "size_mb": 0.00019073486328125,
          "type": ".pkl"
        },
        {
          "file": "data\\raw\\k2.csv",
          "size_mb": 7.588604927062988,
          "type": ".csv"
        },
        {
          "file": "data\\raw\\koi.csv",
          "size_mb": 11.186558723449707,
          "type": ".csv"
        },
        {
          "file": "data\\raw\\toi.csv",
          "size_mb": 4.177643775939941,
          "type": ".csv"
        },
        {
          "file": "data\\splits\\test.csv",
          "size_mb": 0.25461769104003906,
          "type": ".csv"
        },
        {
          "file": "data\\splits\\train.csv",
          "size_mb": 2.0031423568725586,
          "type": ".csv"
        }
      ],
      "total_data_size_mb": 26.80949592590332,
      "optimization_suggestions": [
        "Consider converting koi.csv to parquet for better performance"
      ]
    },
    "model_performance": {
      "saved_models": [
        {
          "file": "models\\best_model.pkl",
          "size_mb": 0.8007164001464844,
          "type": ".pkl"
        },
        {
          "file": "models\\best_model_random_forest.joblib",
          "size_mb": 21.603318214416504,
          "type": ".joblib"
        },
        {
          "file": "models\\lightgbm_model.pkl",
          "size_mb": 0.9888725280761719,
          "type": ".pkl"
        },
        {
          "file": "models\\lightgbm_rtx4060.pkl",
          "size_mb": 1.9392814636230469,
          "type": ".pkl"
        },
        {
          "file": "models\\logistic_regression_model.pkl",
          "size_mb": 0.0019369125366210938,
          "type": ".pkl"
        },
        {
          "file": "models\\model_metadata.pkl",
          "size_mb": 0.000843048095703125,
          "type": ".pkl"
        },
        {
          "file": "models\\model_scores.pkl",
          "size_mb": 0.07647991180419922,
          "type": ".pkl"
        },
        {
          "file": "models\\preprocessor.joblib",
          "size_mb": 0.0019311904907226562,
          "type": ".joblib"
        },
        {
          "file": "models\\random_forest_model.pkl",
          "size_mb": 12.395874977111816,
          "type": ".pkl"
        },
        {
          "file": "models\\random_forest_rtx4060.pkl",
          "size_mb": 60.95645236968994,
          "type": ".pkl"
        },
        {
          "file": "models\\tensorflow_rtx4060.h5",
          "size_mb": 2.1186141967773438,
          "type": ".h5"
        },
        {
          "file": "models\\tensorflow_rtx4060_final.h5",
          "size_mb": 2.1186141967773438,
          "type": ".h5"
        },
        {
          "file": "models\\xgboost_model.pkl",
          "size_mb": 0.8007164001464844,
          "type": ".pkl"
        },
        {
          "file": "models\\xgboost_rtx4060.pkl",
          "size_mb": 1.9006404876708984,
          "type": ".pkl"
        },
        {
          "file": "models\\neural_search\\deepdense_best.keras",
          "size_mb": 2.3964195251464844,
          "type": ".keras"
        },
        {
          "file": "models\\neural_search\\resnetinspired_best.keras",
          "size_mb": 4.863204002380371,
          "type": ".keras"
        },
        {
          "file": "models\\neural_search\\widenetwork_best.keras",
          "size_mb": 6.777998924255371,
          "type": ".keras"
        },
        {
          "file": "models\\quick_tuned\\model_1_extratrees_optimized.joblib",
          "size_mb": 212.6475076675415,
          "type": ".joblib"
        },
        {
          "file": "models\\quick_tuned\\model_2_votingensemble.joblib",
          "size_mb": 559.8128700256348,
          "type": ".joblib"
        },
        {
          "file": "models\\quick_tuned\\preprocessing.joblib",
          "size_mb": 0.0022668838500976562,
          "type": ".joblib"
        }
      ],
      "total_model_size_mb": 892.2045593261719,
      "model_types": {
        ".pkl": 10,
        ".joblib": 5,
        ".h5": 2,
        ".keras": 3
      }
    }
  },
  "optimization_plan": {
    "memory_optimizations": [],
    "performance_improvements": [
      "Implement multiprocessing for CPU-intensive tasks",
      "Add caching for repeated computations",
      "Optimize data loading pipelines",
      "Implement lazy loading for models"
    ],
    "code_refactoring": [
      "Modularize large scripts into classes",
      "Create configuration management system",
      "Implement proper error handling",
      "Add comprehensive logging"
    ],
    "data_optimizations": [
      "Consider converting koi.csv to parquet for better performance",
      "Implement data compression",
      "Add data validation and cleaning",
      "Create efficient data loaders",
      "Implement incremental data processing"
    ],
    "ui_improvements": [
      "Create modern web interface with Streamlit",
      "Add interactive visualizations",
      "Implement progress bars and status indicators",
      "Create responsive design for mobile"
    ],
    "priority_order": [
      "memory_optimizations",
      "performance_improvements",
      "data_optimizations",
      "ui_improvements",
      "code_refactoring"
    ]
  },
  "performance_metrics": {}
}